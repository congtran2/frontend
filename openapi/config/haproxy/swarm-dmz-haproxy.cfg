#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1:514 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     60000
    #user        haproxy
    #group       haproxy
    daemon
    tune.ssl.default-dh-param 2048
	tune.bufsize 24576
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats


resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      10s
    hold refused    10s
    hold nx         10s
    hold timeout    10s
    hold valid      10s
    hold obsolete   10s

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    option		    contstats
    retries                 3
    backlog 		    10000
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          10m
    timeout server          10m
    timeout tunnel          3600s
    timeout http-keep-alive 1s
    timeout http-keep-alive  1s
    timeout http-request    15s
    timeout tarpit          60s
    default-server inter 6s rise 2 fall 3
    timeout check           10s
    maxconn                 20000

cache cache_static_file
    total-max-size 100   # MB
    max-age 604800          # seconds. Cache 7 ngay
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend  main 
    bind *:80
#     redirect scheme https code 301 if !{ ssl_fc }
# frontend mainapp 
#     bind *:443 ssl crt /root/cert/server.pem
    maxconn 40000
    acl url_datafeedquery path_beg -i /datafeed/indexs/ /datafeed/translogsnaps/
    acl url_df capture.req.uri -m beg /datafeed/translogsnaps/ /datafeed/indexs/
    acl url_sso       path_beg      -i /sso
    acl url_realtime       path_beg      -i /realtime
    acl url_marketsk       path_beg      -i /market
    acl url_fileserver       path_beg      -i /files
    acl url_datafeed  capture.req.uri -m beg /depth /datafeed /groups /symbol_info /tvchart
    acl url_inquiry  capture.req.uri -m beg /inq/
    acl url_report    capture.req.uri -m beg /report/
    acl url_transaction	capture.req.uri -m beg /tran/
    acl url_userdata   capture.req.uri -m beg /userdata/
    acl url_notification   capture.req.uri -m beg /notify/
    acl url_fs2pro    capture.req.uri -m beg /fs2pro
    acl url_ekyc   capture.req.uri -m beg /ekyc/
    

    acl url_static capture.req.uri -m beg /styles /js /fonts /images /sso/js /sso/styles /sso/fonts /sso/images
    acl path_root path /
    redirect location fs2pro/ if path_root
    http-response set-header Cache-Control no-cache,\ max-age=0 if !url_static
    http-response set-header Cache-Control cache,\ max-age=2628000 if url_static
   
    use_backend fileserver   if url_fileserver
    use_backend sso          if url_sso
    use_backend realtime     if url_realtime
    use_backend socket_market     if url_marketsk
    use_backend datafeedquery if url_datafeedquery
    use_backend datafeedquery     if url_datafeed
    use_backend inquiry      if url_inquiry
    use_backend transaction  if url_transaction
    use_backend report       if url_report
    use_backend userdata     if url_userdata
    use_backend notification if url_notification
    use_backend fs2pro       if url_fs2pro
    use_backend ekyc         if url_ekyc

 
    default_backend             tradeapi

    compression algo gzip
    compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json
frontend  internal
    bind *:7171
    maxconn 40000
    acl url_sso       path_beg      -i /sso
    acl url_userdata   capture.req.uri -m beg /userdata/
    acl url_notification   capture.req.uri -m beg /notify/
    acl url_fileserver       path_beg      -i /files


    acl url_static capture.req.uri -m beg /styles /js /fonts /images /sso/js /sso/styles /sso/fonts /sso/images
	acl path_root path /
    http-response set-header Cache-Control no-cache,\ max-age=0 if !url_static
    http-response set-header Cache-Control cache,\ max-age=2628000 if url_static

    use_backend sso          if url_sso
    use_backend userdata     if url_userdata
    use_backend notification if url_notification
    use_backend fileserver   if url_fileserver

    default_backend             webadmin

    compression algo gzip
    compression type text/css text/html text/javascript application/javascript text/plain text/xml application/json

backend sso
    acl largeContentLen req.hdr_val(Content-length) gt 3000
    http-request deny if largeContentLen
    balance     roundrobin
    reqrep ^([^\ ]*\ /)sso[/]?(.*)     \1\2
    rsprep ^Location:\ /oauth(.*)     Location:\ /sso/oauth\1 
    rsprep ^Location:\ /login(.*)     Location:\ /sso/login\1
    rsprep ^Location:\ /requirePermission     Location:\ /sso/requirePermission
    rsprep ^Location:\ /verify     Location:\ /sso/verify
    rsprep ^Location:\ /resetPassword     Location:\ /sso/resetPassword
    rsprep ^Location:\ /confirmResetPass     Location:\ /sso/confirmResetPass
	rsprep ^Location:\ /industry(.*)     Location:\ /admin/industry\1
	reqrep ^([^\ ]*\ /)admin[/]?(.*)     \1\2
    server sso fedmz_sso:1347 maxconn 5000 check

backend fs2pro
    balance roundrobin
    reqrep ^([^\ ]*\ /)fs2pro[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /fs2pro/\1
    server trade feweb_fs2pro:3000 maxconn 10000 check
backend ekyc
    balance     roundrobin
    reqrep ^([^\ ]*\ /)ekyc[/]?(.*)     \1\2
    server      ekyc fedmz_ekyc:1348 maxconn 5000 check
backend userdata
    balance     roundrobin
    reqrep ^([^\ ]*\ /)userdata[/]?(.*)     \1\2
    server      userdata fedmz_persistent:1341 maxconn 5000 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend realtime
    balance roundrobin
    reqrep ^([^\ ]*\ /)realtime[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /realtime/\1
	server socket fedmz_socket:1336 maxconn 10000 check
backend socket_market
    balance roundrobin
    reqrep ^([^\ ]*\ /)market[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /market/\1
    server socket-market fedmz_socket-market:1336 maxconn 10000 check

backend tradeapi
    balance     roundrobin
     reqrep ^([^\ ]*\ /)trade[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /trade/\1

    server tradeapi fedmz-tradeapi:8082 maxconn 5000 weight 10 cookie app1 check
backend datafeed
    balance roundrobin
    reqrep ^([^\ ]*\ /)datafeed[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /datafeed/\1
    server datafeed fedmz_datafeed:1335 maxconn 10000 check
backend datafeedquery
    balance roundrobin
    server dfbe 127.0.0.1:13351 check
frontend datafeedqueryfe
    bind 127.0.0.1:13351
    option forwardfor 
    default_backend datafeedquerybe
backend datafeedquerybe
    balance roundrobin
    acl url_df capture.req.uri -m beg /datafeed/translogsnaps/ /datafeed/indexs/

    stick-table type ip size 1m expire 1m store http_req_rate(1m)
    stick on hdr_ip(x-forwarded-for,-1)

    acl click_too_fast sc1_http_req_rate gt 200

    tcp-request content track-sc1 hdr_ip(x-forwarded-for,-1) if url_df
    
    tcp-request content reject if click_too_fast url_df
    reqrep ^([^\ ]*\ /)datafeed[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /datafeed/\1
    server datafeedquery fedmz_datafeedquery:13351 maxconn 10000 check
backend inquiry
	balance roundrobin
	reqrep ^([^\ ]*\ /)inq[/]?(.*)     \1\2
	rsprep ^Location:\ (.*)     Location:\ /inq/\1
	server inquiry fedmz_inquiry:1338 maxconn 5000 check
backend transaction
    balance roundrobin
    reqrep ^([^\ ]*\ /)tran[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /tran/\1
    server transaction fedmz_transaction:1340 maxconn 5000 check
backend report
	balance roundrobin
	reqrep ^([^\ ]*\ /)report[/]?(.*)     \1\2
    rsprep ^Location:\ (.*)     Location:\ /report/\1
	server report fedmz_report:13381 maxconn 5000 check

backend notification
    balance roundrobin
    reqrep ^([^\ ]*\ /)notify[/]?(.*)     \1\2
    rsprep ^Location:\ /(.*)     Location:\ /notify/\1
    server notification fedmz_notification:1345 maxconn 5000 check

backend fileserver
    acl url_fileserver       path_beg      -i /files
    http-request cache-use cache_static_file if url_fileserver
    http-response cache-store cache_static_file if url_fileserver

    balance roundrobin
    reqrep ^([^\ ]*\ /)files[/]?(.*)     \1\2
    server fileserver fedmz_fileserver:3003 maxconn 10000 check    
backend webadmin
	server webadmin admtools_webadmin:4000 maxconn 5000 check init-addr none
listen stats # Define a listen section called "stats"
    bind :9000 # Listen on localhost:9000
    mode http
    stats enable  # Enable stats page
    stats hide-version  # Hide HAProxy version
    stats realm Haproxy\ Statistics  # Title text for popup window
    stats uri /  # Stats URI
