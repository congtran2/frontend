version: "3.2"
services:
  haproxy:
    image: $REGISTRY:5000/tools/haproxy:1.8-alpine
    networks:
      - nw_dmz
    dns:
      - 127.0.0.11
    volumes:
      - ${WORK_DIR}/openapi/config/haproxy/server.pem:/root/cert/server.pem
      - ${WORK_DIR}/openapi/config/haproxy/errors:/usr/local/etc/haproxy/errors
      - ${WORK_DIR}/openapi/config/haproxy/rsyslog_haproxy.conf:/etc/rsyslog.d/haproxy.conf
      - ${WORK_DIR}/openapi/config/haproxy/logrotate_haproxy:/etc/logrotate.d/haproxy
      - ${WORK_DIR}/openapi/config/haproxy/crontab_logrotate:/etc/cron.hourly/logrotate
      - ${WORK_DIR}/openapi/config/haproxy/swarm-dmz-haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ${LOG_DIR}/dmz-haproxy:/usr/src/logs
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 9000
        published: 9001
        protocol: tcp
        mode: host
      - target: 7171
        published: 7171
        protocol: tcp
        mode: host
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: global
      placement:
        constraints: [node.labels.frtend == true]
  sso:
    image: $REGISTRY:5000/${image_namespace}/sso:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/sso/env:/usr/src/app/sso/config/env
      - ${LOG_DIR}/sso:/usr/src/app/sso/log
     # - /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
      - ${WORK_DIR}/openapi/config/sso/clients.js:/usr/src/app/sso/config/clients.js
      - ${WORK_DIR}/config/sso/clientConfig.js:/usr/src/app/sso/config/clientConfig.js
    ports:
      - "1347:1347"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${sso_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  ekyc:
    image: $REGISTRY:5000/${image_namespace}/api.ekyc:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/ekyc/env:/usr/src/app/ekyc/config/env
      - ${LOG_DIR}/ekyc:/usr/src/app/ekyc/log
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
    ports:
      - "1348:1348"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${ekyc_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  datafeed:
    image: $REGISTRY:5000/${image_namespace}/api.datafeed:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/datafeed/env:/usr/src/app/datafeed/config/env
      - ${LOG_DIR}/datafeed:/usr/src/app/datafeed/log
     # - /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    command: 'forever -c "node --max-old-space-size=8192" app.js'
    ulimits:
      core: 0
    ports:
      - "1335:1335"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${datafeed_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  datafeedquery:
    image: $REGISTRY:5000/${image_namespace}/api.datafeed:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/datafeedquery/env:/usr/src/app/datafeed/config/env
      - ${LOG_DIR}/datafeedquery:/usr/src/app/datafeed/log
     # - /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    command: 'forever -c "node --max-old-space-size=8192" app.js'
    ulimits:
      core: 0
    ports:
      - "13351:13351"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${datafeed_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  transaction:
    image: $REGISTRY:5000/${image_namespace}/api.transaction:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/transaction/env:/usr/src/app/transactionserver/config/env
      - ${LOG_DIR}/transaction:/usr/src/app/transactionserver/log
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
    ports:
      - "1340:1340"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${transacttion_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  tradeapi:
    image: $REGISTRY:5000/${image_namespace}/api.tradeapi:${image_tag}
    networks:
      nw_dmz:
        aliases:
          - fedmz-tradeapi
    volumes:
      - ${WORK_DIR}/openapi/config/tradeapi/user.properties:/usr/src/tradeapi/user.properties
      - ${LOG_DIR}/tradeapi:/usr/src/tradeapi/logs
    env_file:
      - ${WORK_DIR}/swarm.env
    ports:
      - "8082:8082"
    deploy:
      mode: replicated
      replicas: ${tradeapi_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  report:
    image: $REGISTRY:5000/${image_namespace}/api.report:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/report/env:/usr/src/app/inquiryserver/config/env
      - ${LOG_DIR}/report:/usr/src/app/inquiryserver/log
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
    ports:
      - "13381:13381"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${report_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  inquiry:
    image: $REGISTRY:5000/${image_namespace}/api.report:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/inquiry/env:/usr/src/app/inquiryserver/config/env
      - ${LOG_DIR}/inquiry:/usr/src/app/inquiryserver/log
     # - /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    ports:
      - "1338:1338"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${inquiry_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  persistent:
    image: $REGISTRY:5000/${image_namespace}/api.persistent:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/persistent/env:/usr/src/app/userdataserver/config/env
      - ${LOG_DIR}/persistent:/usr/src/app/userdataserver/log
     # - /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    ports:
      - "1341:1341"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${persistent_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  socket:
    image: $REGISTRY:5000/${image_namespace}/api.socket:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/socket/env:/usr/src/app/socketserver/config/env
      - ${LOG_DIR}/socket:/usr/src/app/socketserver/log
      #- /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    ports:
      - "1336:1336"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${socket_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  socket-market:
    image: $REGISTRY:5000/${image_namespace}/api.socket:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/socketmarket/env:/usr/src/app/socketserver/config/env
      - ${LOG_DIR}/socketmarket:/usr/src/app/socketserver/log
      #- /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    ports:
      - "13361:1336"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${socketmarket_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  notification:
    image: $REGISTRY:5000/${image_namespace}/api.notification:${image_tag}
    networks:
      - nw_dmz
    volumes:
      - ${WORK_DIR}/openapi/config/notification/env:/usr/src/app/notificationserver/config/env
      - ${LOG_DIR}/notification:/usr/src/app/notificationserver/log
     # - /etc/timezone:/etc/timezone:ro
     # - /etc/localtime:/etc/localtime:ro
    ports:
      - "1345:1345"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${notification_replicas}
      placement:
        constraints: [node.labels.frtend == true]
  fileserver:
    image: $REGISTRY:5000/${image_namespace}/api.fileserver:${image_tag}
    networks:
      - nw_dmz
    ports:
      - "3003:3003"
    env_file:
      - ${WORK_DIR}/swarm.env
    deploy:
      mode: replicated
      replicas: ${fileserver_replicas}
      placement:
        constraints: [node.labels.frtend == true]
networks:
  nw_dmz:
    external: true
